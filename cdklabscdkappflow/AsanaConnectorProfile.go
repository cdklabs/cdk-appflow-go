package cdklabscdkappflow

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/cdklabs/cdk-appflow-go/cdklabscdkappflow/jsii"

	"github.com/aws/aws-cdk-go/awscdk/v2"
	"github.com/aws/aws-cdk-go/awscdk/v2/awsappflow"
	"github.com/aws/aws-cdk-go/awscdk/v2/awssecretsmanager"
	"github.com/aws/constructs-go/constructs/v10"
)

// A class that represents a Asana Connector Profile.
// Experimental.
type AsanaConnectorProfile interface {
	ConnectorProfileBase
	// Experimental.
	Arn() *string
	// Experimental.
	Credentials() awssecretsmanager.ISecret
	// The environment this resource belongs to.
	//
	// For resources that are created and managed by the CDK
	// (generally, those created by creating new class instances like Role, Bucket, etc.),
	// this is always the same as the environment of the stack they belong to;
	// however, for imported resources
	// (those obtained from static methods like fromRoleArn, fromBucketName, etc.),
	// that might be different than the stack they were imported into.
	// Experimental.
	Env() *awscdk.ResourceEnvironment
	// Experimental.
	Name() *string
	// The tree node.
	// Experimental.
	Node() constructs.Node
	// Returns a string-encoded token that resolves to the physical name that should be passed to the CloudFormation resource.
	//
	// This value will resolve to one of the following:
	// - a concrete value (e.g. `"my-awesome-bucket"`)
	// - `undefined`, when a name should be generated by CloudFormation
	// - a concrete name generated automatically during synthesis, in
	//   cross-environment scenarios.
	// Experimental.
	PhysicalName() *string
	// The stack in which this resource is defined.
	// Experimental.
	Stack() awscdk.Stack
	// Apply the given removal policy to this resource.
	//
	// The Removal Policy controls what happens to this resource when it stops
	// being managed by CloudFormation, either because you've removed it from the
	// CDK application or because you've made a change that requires the resource
	// to be replaced.
	//
	// The resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS
	// account for data recovery and cleanup later (`RemovalPolicy.RETAIN`).
	// Experimental.
	ApplyRemovalPolicy(policy awscdk.RemovalPolicy)
	// Experimental.
	BuildConnectorProfileCredentials(props *ConnectorProfileProps) *awsappflow.CfnConnectorProfile_ConnectorProfileCredentialsProperty
	// Experimental.
	BuildConnectorProfileProperties(_props *ConnectorProfileProps) *awsappflow.CfnConnectorProfile_ConnectorProfilePropertiesProperty
	// Experimental.
	GeneratePhysicalName() *string
	// Returns an environment-sensitive token that should be used for the resource's "ARN" attribute (e.g. `bucket.bucketArn`).
	//
	// Normally, this token will resolve to `arnAttr`, but if the resource is
	// referenced across environments, `arnComponents` will be used to synthesize
	// a concrete ARN with the resource's physical name. Make sure to reference
	// `this.physicalName` in `arnComponents`.
	// Experimental.
	GetResourceArnAttribute(arnAttr *string, arnComponents *awscdk.ArnComponents) *string
	// Returns an environment-sensitive token that should be used for the resource's "name" attribute (e.g. `bucket.bucketName`).
	//
	// Normally, this token will resolve to `nameAttr`, but if the resource is
	// referenced across environments, it will be resolved to `this.physicalName`,
	// which will be a concrete name.
	// Experimental.
	GetResourceNameAttribute(nameAttr *string) *string
	// Returns a string representation of this construct.
	// Experimental.
	ToString() *string
	// Experimental.
	TryAddNodeDependency(scope constructs.IConstruct, resource interface{})
}

// The jsii proxy struct for AsanaConnectorProfile
type jsiiProxy_AsanaConnectorProfile struct {
	jsiiProxy_ConnectorProfileBase
}

func (j *jsiiProxy_AsanaConnectorProfile) Arn() *string {
	var returns *string
	_jsii_.Get(
		j,
		"arn",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_AsanaConnectorProfile) Credentials() awssecretsmanager.ISecret {
	var returns awssecretsmanager.ISecret
	_jsii_.Get(
		j,
		"credentials",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_AsanaConnectorProfile) Env() *awscdk.ResourceEnvironment {
	var returns *awscdk.ResourceEnvironment
	_jsii_.Get(
		j,
		"env",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_AsanaConnectorProfile) Name() *string {
	var returns *string
	_jsii_.Get(
		j,
		"name",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_AsanaConnectorProfile) Node() constructs.Node {
	var returns constructs.Node
	_jsii_.Get(
		j,
		"node",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_AsanaConnectorProfile) PhysicalName() *string {
	var returns *string
	_jsii_.Get(
		j,
		"physicalName",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_AsanaConnectorProfile) Stack() awscdk.Stack {
	var returns awscdk.Stack
	_jsii_.Get(
		j,
		"stack",
		&returns,
	)
	return returns
}


// Experimental.
func NewAsanaConnectorProfile(scope constructs.Construct, id *string, props *AsanaConnectorProfileProps) AsanaConnectorProfile {
	_init_.Initialize()

	if err := validateNewAsanaConnectorProfileParameters(scope, id, props); err != nil {
		panic(err)
	}
	j := jsiiProxy_AsanaConnectorProfile{}

	_jsii_.Create(
		"@cdklabs/cdk-appflow.AsanaConnectorProfile",
		[]interface{}{scope, id, props},
		&j,
	)

	return &j
}

// Experimental.
func NewAsanaConnectorProfile_Override(a AsanaConnectorProfile, scope constructs.Construct, id *string, props *AsanaConnectorProfileProps) {
	_init_.Initialize()

	_jsii_.Create(
		"@cdklabs/cdk-appflow.AsanaConnectorProfile",
		[]interface{}{scope, id, props},
		a,
	)
}

// Experimental.
func AsanaConnectorProfile_FromConnectionProfileArn(scope constructs.Construct, id *string, arn *string) AsanaConnectorProfile {
	_init_.Initialize()

	if err := validateAsanaConnectorProfile_FromConnectionProfileArnParameters(scope, id, arn); err != nil {
		panic(err)
	}
	var returns AsanaConnectorProfile

	_jsii_.StaticInvoke(
		"@cdklabs/cdk-appflow.AsanaConnectorProfile",
		"fromConnectionProfileArn",
		[]interface{}{scope, id, arn},
		&returns,
	)

	return returns
}

// Experimental.
func AsanaConnectorProfile_FromConnectionProfileName(scope constructs.Construct, id *string, name *string) AsanaConnectorProfile {
	_init_.Initialize()

	if err := validateAsanaConnectorProfile_FromConnectionProfileNameParameters(scope, id, name); err != nil {
		panic(err)
	}
	var returns AsanaConnectorProfile

	_jsii_.StaticInvoke(
		"@cdklabs/cdk-appflow.AsanaConnectorProfile",
		"fromConnectionProfileName",
		[]interface{}{scope, id, name},
		&returns,
	)

	return returns
}

// Checks if `x` is a construct.
//
// Returns: true if `x` is an object created from a class which extends `Construct`.
// Deprecated: use `x instanceof Construct` instead.
func AsanaConnectorProfile_IsConstruct(x interface{}) *bool {
	_init_.Initialize()

	if err := validateAsanaConnectorProfile_IsConstructParameters(x); err != nil {
		panic(err)
	}
	var returns *bool

	_jsii_.StaticInvoke(
		"@cdklabs/cdk-appflow.AsanaConnectorProfile",
		"isConstruct",
		[]interface{}{x},
		&returns,
	)

	return returns
}

// Returns true if the construct was created by CDK, and false otherwise.
// Experimental.
func AsanaConnectorProfile_IsOwnedResource(construct constructs.IConstruct) *bool {
	_init_.Initialize()

	if err := validateAsanaConnectorProfile_IsOwnedResourceParameters(construct); err != nil {
		panic(err)
	}
	var returns *bool

	_jsii_.StaticInvoke(
		"@cdklabs/cdk-appflow.AsanaConnectorProfile",
		"isOwnedResource",
		[]interface{}{construct},
		&returns,
	)

	return returns
}

// Check whether the given construct is a Resource.
// Experimental.
func AsanaConnectorProfile_IsResource(construct constructs.IConstruct) *bool {
	_init_.Initialize()

	if err := validateAsanaConnectorProfile_IsResourceParameters(construct); err != nil {
		panic(err)
	}
	var returns *bool

	_jsii_.StaticInvoke(
		"@cdklabs/cdk-appflow.AsanaConnectorProfile",
		"isResource",
		[]interface{}{construct},
		&returns,
	)

	return returns
}

func (a *jsiiProxy_AsanaConnectorProfile) ApplyRemovalPolicy(policy awscdk.RemovalPolicy) {
	if err := a.validateApplyRemovalPolicyParameters(policy); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		a,
		"applyRemovalPolicy",
		[]interface{}{policy},
	)
}

func (a *jsiiProxy_AsanaConnectorProfile) BuildConnectorProfileCredentials(props *ConnectorProfileProps) *awsappflow.CfnConnectorProfile_ConnectorProfileCredentialsProperty {
	if err := a.validateBuildConnectorProfileCredentialsParameters(props); err != nil {
		panic(err)
	}
	var returns *awsappflow.CfnConnectorProfile_ConnectorProfileCredentialsProperty

	_jsii_.Invoke(
		a,
		"buildConnectorProfileCredentials",
		[]interface{}{props},
		&returns,
	)

	return returns
}

func (a *jsiiProxy_AsanaConnectorProfile) BuildConnectorProfileProperties(_props *ConnectorProfileProps) *awsappflow.CfnConnectorProfile_ConnectorProfilePropertiesProperty {
	if err := a.validateBuildConnectorProfilePropertiesParameters(_props); err != nil {
		panic(err)
	}
	var returns *awsappflow.CfnConnectorProfile_ConnectorProfilePropertiesProperty

	_jsii_.Invoke(
		a,
		"buildConnectorProfileProperties",
		[]interface{}{_props},
		&returns,
	)

	return returns
}

func (a *jsiiProxy_AsanaConnectorProfile) GeneratePhysicalName() *string {
	var returns *string

	_jsii_.Invoke(
		a,
		"generatePhysicalName",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (a *jsiiProxy_AsanaConnectorProfile) GetResourceArnAttribute(arnAttr *string, arnComponents *awscdk.ArnComponents) *string {
	if err := a.validateGetResourceArnAttributeParameters(arnAttr, arnComponents); err != nil {
		panic(err)
	}
	var returns *string

	_jsii_.Invoke(
		a,
		"getResourceArnAttribute",
		[]interface{}{arnAttr, arnComponents},
		&returns,
	)

	return returns
}

func (a *jsiiProxy_AsanaConnectorProfile) GetResourceNameAttribute(nameAttr *string) *string {
	if err := a.validateGetResourceNameAttributeParameters(nameAttr); err != nil {
		panic(err)
	}
	var returns *string

	_jsii_.Invoke(
		a,
		"getResourceNameAttribute",
		[]interface{}{nameAttr},
		&returns,
	)

	return returns
}

func (a *jsiiProxy_AsanaConnectorProfile) ToString() *string {
	var returns *string

	_jsii_.Invoke(
		a,
		"toString",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (a *jsiiProxy_AsanaConnectorProfile) TryAddNodeDependency(scope constructs.IConstruct, resource interface{}) {
	if err := a.validateTryAddNodeDependencyParameters(scope, resource); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		a,
		"tryAddNodeDependency",
		[]interface{}{scope, resource},
	)
}

